package com.simon.designpattern.proxypattern;


/**

 代理模式：
    代理模式，也叫委托模式
   何为代理模式，通过代理服务器上网是一种代理模式，请别人买饭也是一种代理模式。

  定义：
    为其他对象提供一种代理以控制对这个对象的访问

  使用场景：
     当无法或者不想直接访问某个对象或访问某个对象存在困难的时候可以通过一个代理对象来间接访问，为了保证客户端使用的透明性，委托对象与代理对象需要实现相同的接口。


 实战：
     静态代理目前实际使用的场景是，一个类的使用特别复杂，不想直接使用它的时候,并暴露它的结构的时候。可以为它添加一个静态代理类。

     动态代理：可以动态的给一些对象添加代理类，添加一些公共的逻辑（比如数据库的开启事物和关闭事物）

 */
public class Definition {
}
